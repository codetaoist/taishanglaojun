# 太上老君AI平台 - 前端应用容器化配置
# Taishang Laojun AI Platform - Frontend Application Containerization

# 使用多阶段构建
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制package文件
COPY frontend/web-app/package*.json ./

# 安装依赖
RUN npm ci --only=production

# 复制源代码
COPY frontend/web-app/ .

# 构建应用
RUN npm run build

# 生产镜像
FROM nginx:1.25-alpine

# 安装必要工具
RUN apk --no-cache add curl

# 创建非root用户
RUN addgroup -g 1004 nginxgroup && \
    adduser -u 1004 -G nginxgroup -s /bin/sh -D nginxuser

# 复制构建产物
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制nginx配置
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf

# 创建nginx运行目录
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run && \
    chown -R nginxuser:nginxgroup /var/cache/nginx /var/log/nginx /var/run /usr/share/nginx/html /etc/nginx

# 切换到非root用户
USER nginxuser

# 暴露端口
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]