apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: advanced-ai-ingress
  namespace: taishanglaojun
  labels:
    app: advanced-ai-service
    component: ingress
  annotations:
    # Nginx Ingress Controller配置
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 速率限制
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # 请求大小限制
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    
    # 超时配置
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # CORS配置
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://taishanglaojun.com,https://app.taishanglaojun.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"
    
    # 缓存配置
    nginx.ingress.kubernetes.io/proxy-cache-valid: "200 302 10m"
    nginx.ingress.kubernetes.io/proxy-cache-valid-404: "1m"
    
    # 压缩配置
    nginx.ingress.kubernetes.io/enable-gzip: "true"
    nginx.ingress.kubernetes.io/gzip-types: "text/plain,text/css,application/json,application/javascript,text/xml,application/xml,application/xml+rss,text/javascript"
    
    # 安全头
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';";
    
    # 负载均衡
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # 健康检查
    nginx.ingress.kubernetes.io/health-check-path: "/health"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    nginx.ingress.kubernetes.io/health-check-timeout: "5s"
    
    # 证书管理 (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"

spec:
  tls:
  - hosts:
    - ai.taishanglaojun.com
    - api.taishanglaojun.com
    secretName: tls-secret
  
  rules:
  # 主API域名
  - host: ai.taishanglaojun.com
    http:
      paths:
      # 健康检查
      - path: /health
        pathType: Exact
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # API路由
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # AGI功能
      - path: /api/v1/agi
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # 元学习引擎
      - path: /api/v1/meta-learning
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # 自我进化系统
      - path: /api/v1/self-evolution
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # WebSocket连接
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # 静态文件
      - path: /static
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
      
      # 默认路由
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
  
  # API专用域名
  - host: api.taishanglaojun.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80

---
# 监控和管理界面的Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: taishanglaojun
  labels:
    app: monitoring
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 基本认证
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Monitoring Dashboard"
    
    # IP白名单 (可选)
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - monitoring.taishanglaojun.com
    - grafana.taishanglaojun.com
    - prometheus.taishanglaojun.com
    secretName: monitoring-tls-secret
  
  rules:
  # Grafana仪表板
  - host: grafana.taishanglaojun.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
  
  # Prometheus监控
  - host: prometheus.taishanglaojun.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
  
  # 统一监控入口
  - host: monitoring.taishanglaojun.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000

---
# 开发环境Ingress (仅在开发环境启用)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ingress
  namespace: taishanglaojun
  labels:
    app: advanced-ai-service
    component: dev-ingress
    environment: development
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    
    # 开发环境特定配置
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    
    # 禁用SSL重定向 (开发环境)
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
    # 调试配置
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Debug-Mode: enabled";
      more_set_headers "X-Environment: development";

spec:
  rules:
  - host: dev.ai.taishanglaojun.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
  
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80

---
# 内部服务Ingress (集群内部访问)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-ingress
  namespace: taishanglaojun
  labels:
    app: advanced-ai-service
    component: internal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

spec:
  rules:
  - host: internal.ai.taishanglaojun.com
    http:
      paths:
      # 内部API
      - path: /internal/api
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service-internal
            port:
              number: 8080
      
      # 管理接口
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service
            port:
              number: 80
      
      # 指标接口
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: advanced-ai-service-metrics
            port:
              number: 9090