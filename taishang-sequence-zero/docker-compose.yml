version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: taishang-postgres
    environment:
      POSTGRES_DB: taishang_sequence_zero
      POSTGRES_USER: taishang
      POSTGRES_PASSWORD: taishang123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taishang -d taishang_sequence_zero"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: taishang-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API网关
  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.gateway
    container_name: taishang-api-gateway
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8081
      - CONSCIOUSNESS_SERVICE_URL=http://consciousness-service:8082
      - CULTURAL_SERVICE_URL=http://cultural-service:8083
      - PERMISSION_SERVICE_URL=http://permission-service:8084
      - JWT_SECRET=taishang-jwt-secret-key
    depends_on:
      - auth-service
      - consciousness-service
      - cultural-service
      - permission-service
    networks:
      - taishang-network

  # 认证服务
  auth-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.auth
    container_name: taishang-auth-service
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taishang_sequence_zero
      - DB_USER=taishang
      - DB_PASSWORD=taishang123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=taishang-jwt-secret-key
      - AUTH_SERVICE_PORT=8081
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 意识融合服务
  consciousness-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.consciousness
    container_name: taishang-consciousness-service
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taishang_sequence_zero
      - DB_USER=taishang
      - DB_PASSWORD=taishang123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CONSCIOUSNESS_SERVICE_PORT=8082
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 文化智慧服务
  cultural-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.cultural
    container_name: taishang-cultural-service
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taishang_sequence_zero
      - DB_USER=taishang
      - DB_PASSWORD=taishang123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CULTURAL_SERVICE_PORT=8083
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 权限服务
  permission-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.permission
    container_name: taishang-permission-service
    ports:
      - "8084:8084"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=taishang_sequence_zero
      - DB_USER=taishang
      - DB_PASSWORD=taishang123
      - PERMISSION_SERVICE_PORT=8084
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taishang-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taishang-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_WS_URL=ws://localhost:8080
    depends_on:
      - api-gateway
    networks:
      - taishang-network

volumes:
  postgres_data:
  redis_data:

networks:
  taishang-network:
    driver: bridge