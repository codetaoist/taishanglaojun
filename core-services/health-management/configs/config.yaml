# 健康管理服务配置文件

# 服务配置
server:
  port: 8080
  host: "0.0.0.0"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  max_header_bytes: 1048576

# 数据库配置
database:
  host: "localhost"
  port: 5432
  user: "postgres"
  password: "password"
  dbname: "health_management"
  sslmode: "disable"
  max_idle_conns: 10
  max_open_conns: 100
  conn_max_lifetime: "1h"
  log_level: "info"

# Redis配置
redis:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  pool_size: 10
  min_idle_conns: 5
  dial_timeout: "5s"
  read_timeout: "3s"
  write_timeout: "3s"
  pool_timeout: "4s"
  idle_timeout: "5m"

# 日志配置
logging:
  level: "info"
  format: "json"
  output: "stdout"
  file_path: "/var/log/health-management/app.log"
  max_size: 100
  max_backups: 3
  max_age: 28
  compress: true

# 监控配置
monitoring:
  enabled: true
  metrics_path: "/metrics"
  health_check_path: "/health"
  pprof_enabled: false

# 安全配置
security:
  jwt_secret: "your-jwt-secret-key"
  jwt_expiry: "24h"
  bcrypt_cost: 12
  rate_limit:
    enabled: true
    requests_per_minute: 100
    burst: 10

# 消息队列配置
message_queue:
  type: "redis" # redis, rabbitmq, kafka
  redis:
    host: "localhost"
    port: 6379
    password: ""
    db: 1
  topics:
    health_data_created: "health.data.created"
    health_data_updated: "health.data.updated"
    health_data_abnormal: "health.data.abnormal"
    health_profile_created: "health.profile.created"
    health_profile_updated: "health.profile.updated"
    health_alert_triggered: "health.alert.triggered"

# 外部服务配置
external_services:
  user_service:
    url: "http://localhost:8081"
    timeout: "10s"
    retry_count: 3
  notification_service:
    url: "http://localhost:8082"
    timeout: "5s"
    retry_count: 2
  ai_service:
    url: "http://localhost:8083"
    timeout: "30s"
    retry_count: 1

# 健康数据配置
health_data:
  # 异常值阈值配置
  thresholds:
    heart_rate:
      min: 60
      max: 100
      unit: "bpm"
    blood_pressure_systolic:
      min: 90
      max: 140
      unit: "mmHg"
    blood_pressure_diastolic:
      min: 60
      max: 90
      unit: "mmHg"
    blood_sugar:
      min: 3.9
      max: 6.1
      unit: "mmol/L"
    body_temperature:
      min: 36.1
      max: 37.2
      unit: "°C"
    bmi:
      underweight: 18.5
      normal_min: 18.5
      normal_max: 24.0
      overweight: 24.0
      obese: 28.0
  
  # 数据保留策略
  retention:
    raw_data_days: 365
    aggregated_data_days: 1095
    backup_enabled: true
    backup_interval: "24h"

# 通知配置
notifications:
  enabled: true
  channels:
    - email
    - sms
    - push
  templates:
    abnormal_data: "abnormal_health_data"
    health_report: "health_report_generated"
    medication_reminder: "medication_reminder"
  
  # 通知规则
  rules:
    abnormal_data:
      immediate: true
      cooldown: "1h"
    health_report:
      schedule: "weekly"
      day: "sunday"
      time: "09:00"

# 缓存配置
cache:
  enabled: true
  default_ttl: "1h"
  health_data_ttl: "30m"
  health_profile_ttl: "24h"
  statistics_ttl: "6h"

# 分析配置
analytics:
  enabled: true
  batch_size: 1000
  processing_interval: "5m"
  ml_models:
    anomaly_detection: "health_anomaly_v1"
    risk_prediction: "health_risk_v1"
    trend_analysis: "health_trend_v1"

# 开发环境配置
development:
  debug: true
  auto_migrate: true
  seed_data: true
  cors_enabled: true
  swagger_enabled: true

# 生产环境配置
production:
  debug: false
  auto_migrate: false
  seed_data: false
  cors_enabled: false
  swagger_enabled: false
  tls_enabled: true
  cert_file: "/etc/ssl/certs/health-management.crt"
  key_file: "/etc/ssl/private/health-management.key"

# 测试环境配置
testing:
  database:
    host: "localhost"
    port: 5432
    user: "test_user"
    password: "test_password"
    dbname: "health_management_test"
    sslmode: "disable"
  redis:
    host: "localhost"
    port: 6379
    password: ""
    db: 15